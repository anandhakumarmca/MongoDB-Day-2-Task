Q1: Find all the topics and tasks which are thought in the month of October
===========================================================================

db.getCollection('topics').aggregate(
  [
    {
      $match: {
        $expr: {
          $eq: [{ $month: '$topicDate' }, 10]
        }
      }
    },
    {
      $lookup: {
        from: 'tasks',
        let: { topicDate: '$topicDate' },
        pipeline: [
          {
            $addFields: {
              taskMonth: { $month: '$dueDate' },
              taskDay: { $dayOfMonth: '$dueDate' }
            }
          },
          {
            $match: {
              $expr: {
                $and: [
                  { $eq: ['$taskMonth', 10] },
                  {
                    $eq: [
                      '$taskDay',
                      {
                        $dayOfMonth: '$$topicDate'
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            $project: {
              _id: 0,
              taskId: 1,
              taskName: 1,
              dueDate: 1
            }
          }
        ],
        as: 'tasks'
      }
    },
    {
      $project: {
        _id: 0,
        topicId: 1,
        topicName: 1,
        topicDate: 1,
        tasks: 1
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
-----------------------------------------------------------------------------------------------

Q2: Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020
==================================================================================

db.getCollection('company_drives').aggregate(
  [
    {
      $match: {
        driveDate: {
          $gte: '2020-10-15T00:00:00.000Z',
          $lte: '2020-10-31T23:59:59.999Z'
        }
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
------------------------------------------------------------------------------------------------------

Q3: Find all the company drives and students who are appeared for the placement
===============================================================================

db.getCollection('company_drives').aggregate(
  [
    {
      $lookup: {
        from: 'users',
        localField: 'usersAppeared.userId',
        foreignField: 'userId',
        as: 'students'
      }
    },
    {
      $project: {
        _id: 0,
        'Drive Name': '$driveName',
        'Drive Date': '$driveDate',
        'Students Appeared': '$students.username'
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);

-------------------------------------------------

Q4: Find the number of problems solved by the user in codekata
==============================================================

db.getCollection('codekata').aggregate(
  [
    { $unwind: '$solvedUsers' },
    {
      $group: {
        _id: '$solvedUsers.userId',
        solvedProblems: { $push: '$$ROOT' }
      }
    },
    {
      $replaceRoot: {
        newRoot: {
          $mergeObjects: [
            { _id: '$_id' },
            {
              solvedProblems: {
                $size: '$solvedProblems'
              }
            }
          ]
        }
      }
    },
    { $sort: { _id: 1 } }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
---------------------------------------------------------------

Q5: Find all the mentors with who has the mentee's count more than 15
=====================================================================

db.getCollection('mentors').aggregate(
  [
    {
      $project: {
        _id: 0,
        mentorId: 1,
        username: 1,
        email: 1,
        menteeCount: {
          $size: '$assignedMentees.userId'
        }
      }
    },
    { $match: { menteeCount: { $gt: 1 } } }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
------------------------------------------------------------------

Q6: Find the number of users who are absent and task is not submitted between 15 oct-2020 and 31-oct-2020
==========================================================================================================

db.getCollection('attendance').aggregate(
  [
    {
      $match: {
        date: {
          $gte: '2020-10-15T00:00:00.000Z',
          $lte: '2020-10-31T23:59:59.999Z'
        },
        $or: [
          { status: 'absent' },
          { taskSubmitted: false }
        ]
      }
    },
    {
      $group: {
        _id: {
          userId: '$userId',
          status: {
            $cond: [
              { $eq: ['$status', 'absent'] },
              'absent',
              'taskSubmitted: false'
            ]
          }
        },
        count: { $sum: 1 },
        dates: { $push: '$date' }
      }
    },
    {
      $group: {
        _id: '$_id.userId',
        userData: {
          $push: {
            status: '$_id.status',
            count: '$count',
            dates: '$dates'
          }
        }
      }
    },
    {
      $project: {
        _id: 0,
        userId: '$_id',
        userData: 1
      }
    },
    {
      $group: {
        _id: null,
        usersData: { $push: '$$ROOT' }
      }
    },
    {
      $project: {
        _id: 0,
        absentAndTaskNotSubmitted: '$usersData'
      }
    }
  ],
  { maxTimeMS: 60000, allowDiskUse: true }
);
-------------------------------------------------------------------------------------------------
==================================================================================================
